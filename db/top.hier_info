|top
clk => clk.IN3
rst => rst.IN3
spi_mosi => spi_mosi.IN1
spi_miso => spi_miso.IN1
spi_sck => spi_sck.IN1
spi_cs => spi_cs.IN1
hsync <= vga_display:vga_display_inst.hsync
vsync <= vga_display:vga_display_inst.vsync
red[0] <= vga_display:vga_display_inst.red
red[1] <= vga_display:vga_display_inst.red
red[2] <= vga_display:vga_display_inst.red
red[3] <= vga_display:vga_display_inst.red
green[0] <= vga_display:vga_display_inst.green
green[1] <= vga_display:vga_display_inst.green
green[2] <= vga_display:vga_display_inst.green
green[3] <= vga_display:vga_display_inst.green
blue[0] <= vga_display:vga_display_inst.blue
blue[1] <= vga_display:vga_display_inst.blue
blue[2] <= vga_display:vga_display_inst.blue
blue[3] <= vga_display:vga_display_inst.blue


|top|spi_receiver:spi_inst
clk => data_out[0]~reg0.CLK
clk => data_out[1]~reg0.CLK
clk => data_out[2]~reg0.CLK
clk => data_out[3]~reg0.CLK
clk => data_out[4]~reg0.CLK
clk => data_out[5]~reg0.CLK
clk => data_out[6]~reg0.CLK
clk => data_out[7]~reg0.CLK
clk => data_valid~reg0.CLK
clk => shift_reg[0].CLK
clk => shift_reg[1].CLK
clk => shift_reg[2].CLK
clk => shift_reg[3].CLK
clk => shift_reg[4].CLK
clk => shift_reg[5].CLK
clk => shift_reg[6].CLK
clk => bit_cnt[0].CLK
clk => bit_cnt[1].CLK
clk => bit_cnt[2].CLK
clk => state~4.DATAIN
rst => data_valid~reg0.ACLR
rst => shift_reg[0].ACLR
rst => shift_reg[1].ACLR
rst => shift_reg[2].ACLR
rst => shift_reg[3].ACLR
rst => shift_reg[4].ACLR
rst => shift_reg[5].ACLR
rst => shift_reg[6].ACLR
rst => bit_cnt[0].ACLR
rst => bit_cnt[1].ACLR
rst => bit_cnt[2].ACLR
rst => state~6.DATAIN
rst => data_out[0]~reg0.ENA
rst => data_out[7]~reg0.ENA
rst => data_out[6]~reg0.ENA
rst => data_out[5]~reg0.ENA
rst => data_out[4]~reg0.ENA
rst => data_out[3]~reg0.ENA
rst => data_out[2]~reg0.ENA
rst => data_out[1]~reg0.ENA
spi_mosi => ~NO_FANOUT~
spi_miso => data_out.DATAB
spi_miso => shift_reg.DATAB
spi_sck => shift_reg.OUTPUTSELECT
spi_sck => shift_reg.OUTPUTSELECT
spi_sck => shift_reg.OUTPUTSELECT
spi_sck => shift_reg.OUTPUTSELECT
spi_sck => shift_reg.OUTPUTSELECT
spi_sck => shift_reg.OUTPUTSELECT
spi_sck => shift_reg.OUTPUTSELECT
spi_sck => bit_cnt.OUTPUTSELECT
spi_sck => bit_cnt.OUTPUTSELECT
spi_sck => bit_cnt.OUTPUTSELECT
spi_sck => data_out.OUTPUTSELECT
spi_sck => data_out.OUTPUTSELECT
spi_sck => data_out.OUTPUTSELECT
spi_sck => data_out.OUTPUTSELECT
spi_sck => data_out.OUTPUTSELECT
spi_sck => data_out.OUTPUTSELECT
spi_sck => data_out.OUTPUTSELECT
spi_sck => data_out.OUTPUTSELECT
spi_sck => state.OUTPUTSELECT
spi_sck => state.OUTPUTSELECT
spi_sck => state.OUTPUTSELECT
spi_cs => state.OUTPUTSELECT
spi_cs => state.OUTPUTSELECT
spi_cs => state.OUTPUTSELECT
data_out[0] <= data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_valid <= data_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|fifo_memory:fifo_memory_inst
clk => rd_data[0]~reg0.CLK
clk => rd_data[1]~reg0.CLK
clk => rd_data[2]~reg0.CLK
clk => rd_data[3]~reg0.CLK
clk => rd_data[4]~reg0.CLK
clk => rd_data[5]~reg0.CLK
clk => rd_data[6]~reg0.CLK
clk => rd_data[7]~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
rst => count[0].ACLR
rst => count[1].ACLR
rst => count[2].ACLR
rst => count[3].ACLR
rst => count[4].ACLR
rst => count[5].ACLR
rst => count[6].ACLR
rst => count[7].ACLR
rst => count[8].ACLR
rst => count[9].ACLR
wr_en => count[9].ENA
wr_en => count[8].ENA
wr_en => count[7].ENA
wr_en => count[6].ENA
wr_en => count[5].ENA
wr_en => count[4].ENA
wr_en => count[3].ENA
wr_en => count[2].ENA
wr_en => count[1].ENA
wr_en => count[0].ENA
wr_data[0] => ~NO_FANOUT~
wr_data[1] => ~NO_FANOUT~
wr_data[2] => ~NO_FANOUT~
wr_data[3] => ~NO_FANOUT~
wr_data[4] => ~NO_FANOUT~
wr_data[5] => ~NO_FANOUT~
wr_data[6] => ~NO_FANOUT~
wr_data[7] => ~NO_FANOUT~
rd_en <= <GND>
rd_data[0] <= rd_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rd_data[1] <= rd_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rd_data[2] <= rd_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rd_data[3] <= rd_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rd_data[4] <= rd_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rd_data[5] <= rd_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rd_data[6] <= rd_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rd_data[7] <= rd_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
fifo_empty <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
fifo_full <= <GND>


|top|vga_display:vga_display_inst
clk => char[0].CLK
clk => char[1].CLK
clk => char[2].CLK
clk => char[3].CLK
clk => char[4].CLK
clk => char[5].CLK
clk => char[6].CLK
clk => char[7].CLK
clk => v_cnt[0].CLK
clk => v_cnt[1].CLK
clk => v_cnt[2].CLK
clk => v_cnt[3].CLK
clk => v_cnt[4].CLK
clk => v_cnt[5].CLK
clk => v_cnt[6].CLK
clk => v_cnt[7].CLK
clk => v_cnt[8].CLK
clk => v_cnt[9].CLK
clk => h_cnt[0].CLK
clk => h_cnt[1].CLK
clk => h_cnt[2].CLK
clk => h_cnt[3].CLK
clk => h_cnt[4].CLK
clk => h_cnt[5].CLK
clk => h_cnt[6].CLK
clk => h_cnt[7].CLK
clk => h_cnt[8].CLK
clk => h_cnt[9].CLK
rst => char[0].ACLR
rst => char[1].ACLR
rst => char[2].ACLR
rst => char[3].ACLR
rst => char[4].ACLR
rst => char[5].PRESET
rst => char[6].ACLR
rst => char[7].ACLR
rst => v_cnt[0].ACLR
rst => v_cnt[1].ACLR
rst => v_cnt[2].ACLR
rst => v_cnt[3].ACLR
rst => v_cnt[4].ACLR
rst => v_cnt[5].ACLR
rst => v_cnt[6].ACLR
rst => v_cnt[7].ACLR
rst => v_cnt[8].ACLR
rst => v_cnt[9].ACLR
rst => h_cnt[0].ACLR
rst => h_cnt[1].ACLR
rst => h_cnt[2].ACLR
rst => h_cnt[3].ACLR
rst => h_cnt[4].ACLR
rst => h_cnt[5].ACLR
rst => h_cnt[6].ACLR
rst => h_cnt[7].ACLR
rst => h_cnt[8].ACLR
rst => h_cnt[9].ACLR
hsync <= LessThan0.DB_MAX_OUTPUT_PORT_TYPE
vsync <= LessThan1.DB_MAX_OUTPUT_PORT_TYPE
red[0] <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
red[1] <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
red[2] <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
red[3] <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
green[0] <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
green[1] <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
green[2] <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
green[3] <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
blue[0] <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
blue[1] <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
blue[2] <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
blue[3] <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
char_data[0] => char.DATAA
char_data[0] => Equal1.IN7
char_data[1] => char.DATAA
char_data[1] => Equal1.IN1
char_data[2] => char.DATAA
char_data[2] => Equal1.IN6
char_data[3] => char.DATAA
char_data[3] => Equal1.IN0
char_data[4] => char.DATAA
char_data[4] => Equal1.IN5
char_data[5] => char.DATAA
char_data[5] => Equal1.IN4
char_data[6] => char.DATAA
char_data[6] => Equal1.IN3
char_data[7] => char.DATAA
char_data[7] => Equal1.IN2
data_valid => char[0].ENA
data_valid => char[7].ENA
data_valid => char[6].ENA
data_valid => char[5].ENA
data_valid => char[4].ENA
data_valid => char[3].ENA
data_valid => char[2].ENA
data_valid => char[1].ENA


