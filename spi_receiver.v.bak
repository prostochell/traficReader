module spi_receiver (
    input wire clk,             // System clock
    input wire reset,           // Asynchronous reset
    input wire spi_clk,         // SPI clock
    input wire spi_mosi,        // SPI Master-Out Slave-In
    input wire spi_ss,          // SPI Slave Select
    output reg [7:0] data_out,  // Data output
    output reg data_ready       // Data ready signal
);

    reg [7:0] data_buffer;
    reg [2:0] bit_count;
    reg receiving;

    always @(posedge spi_clk or posedge reset) begin
        if (reset) begin
            bit_count <= 0;
            data_buffer <= 0;
            data_ready <= 0;
            receiving <= 0;
        end else begin
            if (!spi_ss) begin
                receiving <= 1;
                data_buffer <= {data_buffer[6:0], spi_mosi};
                bit_count <= bit_count + 1;
                if (bit_count == 7) begin
                    data_out <= {data_buffer[6:0], spi_mosi};
                    data_ready <= 1;
                    bit_count <= 0;
                end
            end else begin
                receiving <= 0;
                data_ready <= 0;
            end
        end
    end
endmodule
